{"version":3,"sources":["images/flag-of-europe.svg","components/AddPassport.js","components/Print.js","components/ClearAll.js","components/DeletePassport.js","components/PassportsToPrint.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AddPassport","handleChange","handleAddPlant","className","action","id","type","placeholder","onChange","min","onClick","Print","handlePrint","ClearAll","handleClearAll","DeletePassport","handleDeletePassport","PassportsToPrint","passportsList","map","passport","key","plantName","amount","colSpan","src","flagOfEurope","alt","plantId","App","state","actualPassport","clearForm","plant","document","getElementById","value","focus","setState","e","actualInput","target","toUpperCase","slice","preventDefault","prevState","uuidv4","window","print","filter","this","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.989ec13b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flag-of-europe.7b4534d2.svg\";","import React from \"react\";\r\nimport '../styles/AddPassport.scss';\r\n\r\n// class AddPassport extends\r\nconst AddPassport = ({handleChange, handleAddPlant}) => {\r\n  return (\r\n    <section className=\"add-passport no-print\">\r\n      <h2 className=\"add-passport__header\">Dodaj paszport</h2>\r\n      <form className=\"add-passport__form\" action=\"\">\r\n        <input\r\n          className=\"add-passport__input\"\r\n          id=\"plantName\"\r\n          type=\"text\"\r\n          placeholder=\"Roślina\"\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          className=\"add-passport__input\"\r\n          id=\"amount\"\r\n          type=\"number\"\r\n          min=\"1\"\r\n          placeholder=\"Ilość sztuk\"\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          className=\"add-passport__input\"\r\n          id=\"plantId\"\r\n          type=\"text\"\r\n          placeholder=\"Id\"\r\n          onChange={handleChange}\r\n        />\r\n        <button className=\"add-passport__button\" id=\"button-add\" type=\"submit\" onClick={handleAddPlant}>\r\n          +\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddPassport;\r\n","import React from 'react';\r\n\r\nconst Print = ({ handlePrint }) => {\r\n  return (\r\n    <button className=\"passports__button passports__button--print no-print\" id=\"button-print\" onClick={handlePrint}>Drukuj</button>\r\n  )\r\n}\r\n\r\nexport default Print;","import React from \"react\";\r\n\r\nconst ClearAll = ({ handleClearAll }) => {\r\n  return (\r\n    <button\r\n      className=\"passports__button passports__button--clear no-print\"\r\n      id=\"button-clear\"\r\n      onClick={handleClearAll}\r\n    >\r\n      Wyczyść wszystko\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ClearAll;\r\n","import React from \"react\";\r\n\r\nconst DeletePassport = ({ handleDeletePassport }) => {\r\n  return (\r\n    <button\r\n      className=\"passport__delete-button no-print\"\r\n      onClick={handleDeletePassport}\r\n    ></button>\r\n  );\r\n};\r\n\r\nexport default DeletePassport;\r\n","import React from \"react\";\r\nimport flagOfEurope from \"../images/flag-of-europe.svg\";\r\nimport \"../styles/PassportsToPrint.scss\";\r\nimport DeletePassport from \"./DeletePassport\";\r\n\r\nconst PassportsToPrint = ({ passportsList, handleDeletePassport }) => {\r\n  // const handleCancelEdit = (id) => {};\r\n  // const handleConfirmEdit = () => {};\r\n  // const handleEditPassport = () => {};\r\n\r\n  return passportsList.map((passport) => {\r\n    return (\r\n      <div key={passport.id} className=\"PassportsToPrint\">\r\n        <p className=\"passport__paragraph\">\r\n          {passport.plantName} &#160; {passport.amount}szt.\r\n        </p>\r\n        <div className=\"passport__box\">\r\n          <div className=\"passport\">\r\n            <table className=\"table\">\r\n              <thead className=\"table__head\">\r\n                <tr className=\"table__head-row\">\r\n                  <th className=\"table__head-cell\" colSpan=\"4\">\r\n                    <img\r\n                      src={flagOfEurope}\r\n                      alt=\"Flag of Europe\"\r\n                      className=\"table__flag\"\r\n                    />\r\n                    <h3 className=\"table__header\">\r\n                      Paszport Roślin &#92; Plant Passport\r\n                    </h3>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td className=\"table__cell table__cell--letter\">A</td>\r\n                  <td className=\"table__cell table__cell--data\">\r\n                    {passport.plantName}\r\n                  </td>\r\n                  <td className=\"table__cell table__cell--letter\">B</td>\r\n                  <td className=\"table__cell table__cell--data\">\r\n                    PL-18/62/5804\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"table__cell table__cell--letter\">C</td>\r\n                  <td className=\"table__cell table__cell--data\">\r\n                    {passport.plantId}\r\n                  </td>\r\n                  <td className=\"table__cell table__cell--letter\">D</td>\r\n                  <td className=\"table__cell table__cell--data\">PL</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <DeletePassport\r\n            handleDeletePassport={() => handleDeletePassport(passport.id)}\r\n          />\r\n        </div>\r\n\r\n        {/* <button className=\"no-print\" onClick={handleEditPassport(passport.id)}>\r\n          Edytuj\r\n        </button> */}\r\n        {/* \r\n        <form\r\n          className=\"edit-passport__form\"\r\n          id={\"edit-\" + passport.id}\r\n          action=\"\"\r\n          style={{ display: \"none\" }}\r\n        >\r\n          <input\r\n            className=\"edit-passport__input\"\r\n            type=\"text\"\r\n            placeholder=\"Roślina\"\r\n            value={passport.plantName}\r\n          />\r\n          <input\r\n            className=\"edit-passport__input\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            placeholder=\"Ilość sztuk\"\r\n            value={passport.amount}\r\n          />\r\n          <input\r\n            className=\"edit-passport__input\"\r\n            type=\"text\"\r\n            placeholder=\"Id\"\r\n            value={passport.plantId}\r\n          />\r\n          <button\r\n            className=\"edit-passport__button\"\r\n            type=\"submit\"\r\n            onClick={handleConfirmEdit}\r\n          >\r\n            Zatwierdź\r\n          </button>\r\n          <button\r\n            className=\"edit-passport__button\"\r\n            id={\"cancel-edit-\" + passport.id}\r\n            type=\"submit\"\r\n            onClick={handleCancelEdit(passport.id)}\r\n          >\r\n            Anuluj\r\n          </button>\r\n        </form> */}\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default PassportsToPrint;\r\n","import React, { Component } from \"react\";\nimport \"./styles/App.scss\";\nimport { v4 as uuidv4 } from 'uuid';\nimport AddPassport from \"./components/AddPassport\";\nimport Print from \"./components/Print\";\nimport ClearAll from \"./components/ClearAll\";\nimport PassportsToPrint from \"./components/PassportsToPrint\";\n\nclass App extends Component {\n  state = {\n    actualPassport: {id: '', plantName: '', amount: 0, plantId: ''},\n    passportsList: [],\n\n  };\n\n  clearForm = () => {\n    const plant = document.getElementById('plantName');\n    plant.value = '';\n    plant.focus();\n    document.getElementById('amount').value = '';\n    document.getElementById('plantId').value = '';\n    this.setState({actualPassport: {id: '', plantName: '', amount: 0, plantId: ''}});\n  }\n\n  handleChange = (e) => {\n    const actualInput = e.target.id;\n    this.setState({\n      actualPassport: {\n        ...this.state.actualPassport, \n        [actualInput]: actualInput === 'plantName' ?\n          e.target.value ? \n            (e.target.value)[0].toUpperCase() + (e.target.value).slice(1)\n            : ''\n          : e.target.value\n      }\n    })\n  }\n  handleAddPlant = (e) => {\n    e.preventDefault();\n    this.setState(prevState => {\n      const actualPassport = {...prevState.actualPassport, id: uuidv4()};\n      const passportsList = [...prevState.passportsList, actualPassport]\n      return {passportsList}\n    })\n    this.clearForm();\n  }\n  \n  handleClearAll = () => {\n    this.setState({\n      passportsList: []\n    })\n  }\n\n  handlePrint = () => {\n    window.print();\n    return false;\n  }\n\n  handleDeletePassport = (id) => {\n    this.setState(prevState => {\n      const passportsList = [...prevState.passportsList].filter(passport => passport.id !== id)\n      return {passportsList};\n    })\n  };\n\n  componentDidMount() {\n    document.getElementById('plantName').focus();\n  }\n  \n  render() {\n    return (\n      <main className=\"App\">\n        <div>\n          <AddPassport handleChange={this.handleChange} handleAddPlant={this.handleAddPlant} />\n          <br />\n          <section className=\"passports\">\n            <Print handlePrint={this.handlePrint}/>\n            <ClearAll handleClearAll={this.handleClearAll}/>\n            <PassportsToPrint passportsList={this.state.passportsList} handleDeletePassport={this.handleDeletePassport}/>\n          </section>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}